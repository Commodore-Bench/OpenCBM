
; This program is heavily based on Joe Forster/STAs <sta@c64.org>
; StarCommander Turbo routines.
;
; "$Id: warpwrite1571.a65,v 1.1 2004-11-07 11:05:12 strik Exp $"

	* = $0500

	tr = $0a
	se = tr+1

	drv = $7f
	buf = $f9

	dbufptr	   = $31
	bump_cnt   = $8d
	n_sectors  = $43
	retry_flag = $90
	retry_mode = $6a

	write = $0146
	retry = $06c0

	get_ts     = $0700
	get_byte   = $0703
	get_block  = $0706
	send_byte  = $0709
	init	   = $070f

	jmp main

	jsr init
	ldy #$5e
i0	lda $f57a,y
	sta write,y
	dey
	bpl i0
	ldy #$36
i1	lda $d5f8,y
	sta retry,y
	dey
	bpl i1
	lda #$2c
	sta write+$0c
	lda #$60
	sta write+$5f
	sta retry+$37
	ldx drv
	lda $feca,x
	sta $026d
	lda #$01
	sta $1c,x
start	lda #$00
	sta retry_flag
	lda #$02
	sta buf
	sta bump_cnt
	sei
	jsr get_ts
	stx tr
	sty se
	cli
exec	lda tr
	beq done
	ldx buf
	lda #$e0
	jsr $d57d
wait	lda $00,x
	bmi wait
check	beq exec
	cmp #$08
	beq nobump
	sta retry_flag
	jsr $d6a6
	bcc check
	bit retry_mode
	bvs noht
	jsr retry
	bcc check
noht	bit retry_mode
	bmi nobump
	dec bump_cnt
	beq nobump
	lda #$c0
	jsr $d57d
	jsr $d599
	bne exec
nobump	sei
	jsr send_byte
	cli
	jmp start
done	sta $1800	; A == 0
	jmp $c194

main	lda tr
	cmp $fed7
	bcc legal
	lda $1c00
	and #$9f
	sta $1c00
	lda #$11
	sta n_sectors
legal	lda retry_flag
	bne isretry
	lda $180f
	pha
	ora #$20
	sta $180f	; 2 MHz
	jsr get_byte
	sta $01bb
	lda #$01
	sta dbufptr
	ldy #$bc
	jsr get_block
	lda #$03
	sta dbufptr
	jsr get_block
	pla
	sta $180f
isretry	lda #$03
	sta dbufptr
	jsr write
	lda $026d
	eor $1c00
	sta $1c00
	lda #$0
	sta retry_flag
	jsr send_byte
	lda #$2
	sta bump_cnt
	jsr get_ts
	cpx tr
	stx tr
	sty se
	beq legal
	lda #$00
	jmp $f969
