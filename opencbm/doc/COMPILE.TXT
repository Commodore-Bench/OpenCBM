                            HOW TO COMPILE CBM4WIN

1. INTRODUCTION

This file describes how you can set up your own build environment for cbm4win.
You need this one if you plan on working on cbm4win and its tools. You do not
need to read this is you only want to use cbm4win. You do not need to read this
if you want to build some 3rd party tools which utility cbm4win. If you want
this, look at that 3rd party tool for build instructions.

cbm4win consists of a device driver (actually, there are two different one) and
some tools which use the device driver. Device drivers are something different
from ordinary "user mode" programs, and you need a special environment for
building these.

The Windows DDK ("device/driver development kit") is the environment you need to
build drivers for Windows systems. The DDK comes in different flavors, there are
different DDKs for Windows 95, 98, Me, NT, 2000, XP, and 2003. Fortunately, most
of these DDK are backward compatible, that is, you can build drivers for older
systems with a newer DDK.

cbm4win was built with the Windows 2003 DDK. Theoretically, you should be able
to use the XP DDK, too. Unfortunately, there is a bug in the XP DDK, which
prevents using that one for building cbm4win. Furthermore, cbm4win makes use
of the so-called "cancel-safe queues" (CSQ), which are not available before the
XP DDK, so, any DDK before XP will not work.


2. PREREQUISITES

I highly recommend you get the Windows 2003 DDK (or anything later) from
Microsoft. Although it is not free, MS gives it away for shipping (at the time
of this writing, this is $15 in the U.S., $25 to Germany), and you do not have
any problems with that one. The DDK contains the complete toolchain you need,
that is, compiler, linker, build tool, debugging tools, documentation, and so
on.

Anyway, if you do not plan to modify the driver itself, but only to work on the
"user mode" portion of the driver, the DDK is not needed. Although I built every
official release of cbm4win with the DDK, you can use an ordinary compiler for
any user-mode tools. In fact, the cbm4win source package even contains a project
file for MS VC++ 6.0, which works flawlessly.

Furthermore, if you own MS VC++ 6 (version 5 might work, too) and the DDK, you
might want to use DDKBUILD, which helps you use the DDK build tools from the MS
VC++ IDE.


3. BUILDING CBM4WIN

The steps to build the files highly depend on your scenario, that is, if you use
the DDK, DDK + DDKBUILD + MS VC, or MS VC only. Because of this, I show you how
to build the tools in every scenario.

  A. Using the DDK only

  This is very easy:
  - Unzip the cbm4win source package into a directory.
  - Install the DDK on your machine. Make sure the install the Win 2000 build
    environment.
  - Select DDK/Build Environments/Win 2000 Checked Build (or Win 2000 Free Build
    Environment) in the start menu.
  - Change to the cbm4win source directory
  - Type "build -cZ", and press enter.
  - After compilation has finished, you can get the compiled files in the
    bin\i386 directory.

  B. Using the DDK, DDKBUILD, and MSVC:

  DDKBUILD is a tool which helps you compiling drivers using the MS VC++ IDE.
  DDKBUILD is available in two different versions, from OSR
  (http://www.osronline.com/article.cfm?article=43), or from Hollistech
  (http://www.hollistech.com/Resources/ddkbuild/ddkbuild.htm). It was written by
  Mark Roddy, who was associated with OSR, but is now with Hollistech. Anyway,
  personally, I only used the DDKBUILD version from OSR (version 5.3). The
  version from Hollistech might need some adjustments.

  Now, do the following to compile using the DDK, DDKBUILD, and MSVC.

  - Make sure you have a MS Visual C++ IDE installed (I have tested Version 6,
    but version 5 should work, too, as well as the MS .NET IDE)
  - Install the DDK on your machine. Make sure the install the Win 2000 build
    environment.
  - Get DDKBUILD from the OSR (http://www.osronline.com/article.cfm?article=43)
    and install it into a directory which is in the search path.
  - Unzip the cbm4win source package into a directory.
  - Adjust the directories for the DDK in the file DDKBUILD_START.BAT in the
    cbm4win source directory. As you should use the Win 2003 DDK, adjust the
    WNETBASE variable.
  - Start the cbm4win.dsw file from there, and compile the "all" project.
  - After compilation has finished, you can get the compiled files in the
    bin\i386 directory.

  C. Using MSVC:

  If you do not have the DDK, you can compile most of cbm4win with MSVC only. I
  only tested MSVC 6, but other versions might work, too. Anyway, no drivers
  will be built, only the user tools can be compiled this way.

  Now, do the following to compile using MSVC only.

  - Make sure you have a MS Visual C++ IDE installed (I have tested Version 6,
    but version 5 should work, too, as well as the MS .NET IDE)
  - Unzip the cbm4win source package into a directory.
  - Start the cbm4win.dsw file from there, and compile the "allvs" project.
  - After compilation has finished, you can get the compiled files in the
    bin\i386 directory.


If you manage to compile cbm4win with another compiler, feel free tell me.

Happy compiling!

Spiro Trikaliotis, 27.11.2004
